/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN!
// NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.

// ImageVulnerabilitySpec defines the desired state of ImageVulnerability
type ImageVulnerabilitySpec struct {
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
	// Important: Run "make" to regenerate code after modifying this file

	Image string `json:"image,omitempty"`
}

// ImageVulnerabilityStatus defines the observed state of ImageVulnerability
type ImageVulnerabilityStatus struct {
	// INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
	// Important: Run "make" to regenerate code after modifying this file
	Vulnerabilities []DetectedVulnerability `json:"vulnerabilities,omitempty"`
}

type DetectedVulnerability struct {
	VulnerabilityID  string `json:"VulnerabilityID,omitempty"`
	PkgName          string `json:"PkgName,omitempty"`
	InstalledVersion string `json:"InstalledVersion,omitempty"`
	FixedVersion     string `json:"FixedVersion,omitempty"`
	SeveritySource   string `json:"SeveritySource,omitempty"`

	Title       string     `json:"Title,omitempty"`
	Description string     `json:"Description,omitempty"`
	Severity    string     `json:"Severity,omitempty"`
	CweIDs      []string   `json:"CweIDs,omitempty"`
	CVSS        VendorCVSS `json:"CVSS,omitempty"`
	References  []string   `json:"References,omitempty"`
}

type CVSS struct {
	V2Vector string `json:"V2Vector,omitempty"`
	V3Vector string `json:"V3Vector,omitempty"`
	V2Score  string `json:"V2Score,omitempty"`
	V3Score  string `json:"V3Score,omitempty"`
}

type VendorCVSS map[string]CVSS

// +kubebuilder:object:root=true
// +kubebuilder:resource:scope=Cluster

// ImageVulnerability is the Schema for the imagevulnerabilities API
type ImageVulnerability struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ImageVulnerabilitySpec   `json:"spec,omitempty"`
	Status ImageVulnerabilityStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ImageVulnerabilityList contains a list of ImageVulnerability
type ImageVulnerabilityList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ImageVulnerability `json:"items"`
}

func init() {
	SchemeBuilder.Register(&ImageVulnerability{}, &ImageVulnerabilityList{})
}
